# load required libraries
library(BiodiversityR)
library(plyr)
library(foreign)
library(vegan)
library(cluster)
library(ape)
library(proxy)
######################################----
MLRASpecies <- readRDS('data/USFSSpecies.RDS')
fakeplots <- read.delim("data/fakeplots.txt")
MLRASpecies <- readRDS('data/usfsmatrix.RDS')
mlramatrix <- makecommunitydataset(fakeplots, row = 'plot', column = 'species', value = 'abundance')
mlrabraydist <- vegdist(mlramatrix,method='bray', binary=FALSE, na.rm=T)
mlrajacdist <- vegdist(mlramatrix,method='jaccard', binary=FALSE, na.rm=T)
mlrajacdist2 <- vegdist(mlramatrix,method='jaccard', binary=TRUE, na.rm=T)
mlrasorendist <- vegdist(mlramatrix,method='bray', binary=TRUE, na.rm=T)
mlrasimpsim <- simil(mlramatrix,method='Simpson')
disbray <- as.data.frame(as.matrix(mlrabraydist))
disjac <- as.data.frame(as.matrix(mlrajacdist))
disjacsqrt <- as.data.frame(as.matrix(vegdist(mlramatrix^(1/3),method='jaccard', binary=FALSE, na.rm=T)))
disbraysqrt <- as.data.frame(as.matrix(vegdist(mlramatrix^(1/3),method='bray', binary=FALSE, na.rm=T)))
disjac2 <- as.data.frame(as.matrix(mlrajacdist2))
dissoren <- as.data.frame(as.matrix(mlrasorendist))
simsim <- as.data.frame(as.matrix(mlrasimpsim))
jactree <- agnes(disjac, method='average')
jacsqrttree <- agnes(disjacsqrt, method='average')
jactree2 <- agnes(disjac2, method='average')
braytree <- agnes(disbray, method='average')
braysqrttree <- agnes(disbraysqrt, method='average')
sorentree <- agnes(dissoren, method='average')
dianabraytree <- diana(disbray)
dianajactree <- diana(disjac)
simtree <- agnes(simsim, method='average')
install.packages("proxy")
library(proxy)
mlrasimpsim <- simil(mlramatrix,method='Simpson')
dissoren <- as.data.frame(as.matrix(mlrasorendist))
simsim <- as.data.frame(as.matrix(mlrasimpsim))
w <- 500
h <- 1000
u <- 20
png(filename="output/jactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree)), main='MLRA floristic simularity - jaccard metric',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jacsroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jacsqrttree)), main='MLRA floristic simularity - jaccard cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jactree2.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree2)), main='MLRA floristic simularity - jaccard binary',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/braytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braytree)), main='MLRA floristic simularity - bray-curtis',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/brayroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braysqrttree)), main='MLRA floristic simularity - bray-curtis-cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/sorentree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(sorentree)), main='MLRA floristic simularity - sorensen',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianajactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianajactree)), main='MLRA floristic simularity - diana jaccard',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianabraytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianabraytree)), main='MLRA floristic simularity - diana bray',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/simsim.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(simtree)), main='MLRA floristic simularity - simpson',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
simtree <- agnes(simsim, method='average')
w <- 500
h <- 1000
u <- 20
png(filename="output/jactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree)), main='MLRA floristic simularity - jaccard metric',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jacsroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jacsqrttree)), main='MLRA floristic simularity - jaccard cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jactree2.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree2)), main='MLRA floristic simularity - jaccard binary',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/braytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braytree)), main='MLRA floristic simularity - bray-curtis',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/brayroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braysqrttree)), main='MLRA floristic simularity - bray-curtis-cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/sorentree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(sorentree)), main='MLRA floristic simularity - sorensen',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianajactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianajactree)), main='MLRA floristic simularity - diana jaccard',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianabraytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianabraytree)), main='MLRA floristic simularity - diana bray',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/simsim.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(simtree)), main='MLRA floristic simularity - simpson',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
chaodist <- as.data.frame(as.matrix(vegdist(mlramatrix,method='chao', binary=FALSE, na.rm=T)))
chaotree <- agnes(chaodist, method='average')
png(filename="output/chaotree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(chaotree)), main='MLRA floristic simularity - chao',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
mlramatrix <- readRDS('data/usfsmatrix.RDS')
mlrabraydist <- vegdist(mlramatrix,method='bray', binary=FALSE, na.rm=T)
mlrajacdist <- vegdist(mlramatrix,method='jaccard', binary=FALSE, na.rm=T)
mlrajacdist2 <- vegdist(mlramatrix,method='jaccard', binary=TRUE, na.rm=T)
mlrasorendist <- vegdist(mlramatrix,method='bray', binary=TRUE, na.rm=T)
mlrasimpsim <- simil(mlramatrix,method='Simpson')
disbray <- as.data.frame(as.matrix(mlrabraydist))
disjac <- as.data.frame(as.matrix(mlrajacdist))
disjacsqrt <- as.data.frame(as.matrix(vegdist(mlramatrix^(1/3),method='jaccard', binary=FALSE, na.rm=T)))
disbraysqrt <- as.data.frame(as.matrix(vegdist(mlramatrix^(1/3),method='bray', binary=FALSE, na.rm=T)))
disjac2 <- as.data.frame(as.matrix(mlrajacdist2))
dissoren <- as.data.frame(as.matrix(mlrasorendist))
simsim <- as.data.frame(as.matrix(mlrasimpsim))
chaodist <- as.data.frame(as.matrix(vegdist(mlramatrix,method='chao', binary=FALSE, na.rm=T)))
#tree build
jactree <- agnes(disjac, method='average')
jacsqrttree <- agnes(disjacsqrt, method='average')
jactree2 <- agnes(disjac2, method='average')
braytree <- agnes(disbray, method='average')
braysqrttree <- agnes(disbraysqrt, method='average')
sorentree <- agnes(dissoren, method='average')
dianabraytree <- diana(disbray)
dianajactree <- diana(disjac)
simtree <- agnes(simsim, method='average')
chaotree <- agnes(chaodist, method='average')
w <- 500
h <- 2000
u <- 12
png(filename="output/jactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree)), main='MLRA floristic simularity - jaccard metric',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jacsroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jacsqrttree)), main='MLRA floristic simularity - jaccard cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/jactree2.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(jactree2)), main='MLRA floristic simularity - jaccard binary',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/braytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braytree)), main='MLRA floristic simularity - bray-curtis',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/brayroottree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(braysqrttree)), main='MLRA floristic simularity - bray-curtis-cuberoot',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/sorentree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(sorentree)), main='MLRA floristic simularity - sorensen',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianajactree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianajactree)), main='MLRA floristic simularity - diana jaccard',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/dianabraytree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dianabraytree)), main='MLRA floristic simularity - diana bray',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/simsim.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(simtree)), main='MLRA floristic simularity - simpson',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
png(filename="output/chaotree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(chaotree)), main='MLRA floristic simularity - chao',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
# load required libraries
library(BiodiversityR)
library(plyr)
library(foreign)
library(vegan)
library(cluster)
library(ape)
library(proxy)
fipsjacdist <- readRDS("data/fipsjacdist.RDS")
fipsjacdistdf <- as.data.frame(as.matrix(fipsjacdist))
View(fipsjacdistdf)
subsecjacdist <- readRDS("data/subsecjacdist.RDS")
fipsjacdistdf <- as.data.frame(as.matrix(subsecjacdist))
View(fipsjacdistdf)
# load required libraries
library(BiodiversityR)
library(plyr)
library(foreign)
library(vegan)
library(cluster)
library(ape)
library(proxy)
MLRASpecies <- readRDS('data/USFSSubSpecies.RDS')
mlramatrix <- readRDS('data/usfsmatrix.RDS')
mlramatrix <- readRDS('data/usfssubsecmatrix.RDS')
dcamodel <- decorana(mlramatrix)
plot(dcamodel)
dcamodel$evals
dcamodel$rproj
print(dcamodel)
summary(dcamodel)
dcamodel$rproj
sites <- dcamodel$rproj
View(sites)
species <- dcamodel$cproj
View(species)
dcatree <- agnes(sites)
w <- 500
h <- 10000
u <- 10
png(filename="output/dcatree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dcatree)), main='USFS subsection floristic simularity - DECORANA',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
dcatree <- agnes(sites, method = 'ward')
w <- 500
h <- 10000
u <- 10
png(filename="output/dcatree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dcatree)), main='USFS subsection floristic simularity - DECORANA',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
dcatree <- agnes(sites)
w <- 500
h <- 10000
u <- 10
png(filename="output/dcatree.png",width = w, height = h, units = "px", pointsize = u)
plot(as.phylo(as.hclust(dcatree)), main='USFS subsection floristic simularity - DECORANA',label.offset=0.05, direction='right', font=1, cex=0.85)
dev.off()
library(BiodiversityR)
library(cluster)
library(ape)
library(dendextend)
#library(plyr)
library(dplyr)
library(dynamicTreeCut)
library(rpart)
library(rpart.plot)
library(goeveg)
library(proxy)
library(goeveg)
#import
preplotdata <- read.delim("data/GRIN/altgeogrin.txt")
rownames(preplotdata) <- preplotdata[,1]
preplotdata <- preplotdata[,-1]
excluded <- ''
#excluded <- c('Alabama', 'Arizona', 'Arkansas', 'British_Columbia', 'Connecticut', 'Delaware', 'District_of_Columbia', 'Georgia', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kentucky', 'Louisiana', 'Maryland', 'Massachusetts', 'Minnesota', 'Mississippi', 'Montana', 'Nebraska', 'Nevada', 'New_Brunswick', 'New_Hampshire', 'New_Jersey', 'New_Mexico', 'New_York', 'Newfoundland', 'North_Carolina', 'Northwest_Territory', 'Nova_Scotia', 'Ohio', 'Oklahoma', 'Ontario', 'Oregon', 'Pennsylvania', 'Prince_Edward_Island', 'Quebec', 'Rhode_Island', 'Saskatchewan', 'South_Dakota', 'Vermont', 'Virginia', 'Wisconsin', 'Wyoming', 'Yukon_Territory')
coltotals <- (apply(preplotdata, MARGIN = 1, FUN = 'sum' ))
rowtotals <- (apply(preplotdata, MARGIN = 2, FUN = 'sum' ))
excluded <- c(names(rowtotals[rowtotals < 40]), 'District_of_Columbia')
#preplotdata <- preplotdata/(coltotals)*100
#preplotdata <- as.data.frame(t(t(preplotdata)/(rowtotals)*100)) #totals by plot
preplotdata <- preplotdata[order(row.names(preplotdata), decreasing = FALSE),sort(colnames(preplotdata), decreasing = FALSE)]
preplotdata <- preplotdata[,!(names(preplotdata) %in% excluded)]
plotdata <- t(preplotdata)
#betasim
betasim <- function(p){
d <- matrix(1, nrow = nrow(p), ncol = nrow(p))
rownames(d) <- rownames(p)
colnames(d) <- rownames(p)
for(j in 1:nrow(p)){
for(k in 1:nrow(p)){
d[j,k] <- 1-sum((p[j,]*p[k,])^0.5)/min(sum(p[j,]), sum(p[k,]))
}}
d<-as.dist(d)
}
betasim2 <- function(p){
d <- matrix(1, nrow = nrow(p), ncol = nrow(p))
rownames(d) <- rownames(p)
colnames(d) <- rownames(p)
for(j in 1:nrow(p)){
for(k in 1:nrow(p)){
d[j,k] <- 1-sum((p[j,]*p[k,])^0.5)/sqrt(sum(p[j,])*sum(p[k,]))
}}
d<-as.dist(d)
}
#makeplot
makeplot <- function(a,d,t,k){
filename <- paste0('output/GRIN_',a,'.png')
t <- as.hclust(t)
#make cuts and reformat dendrogram
ngroups=k
groups <- cutree(t, k = ngroups)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
newlabels <- t$labels
newlabels <- as.data.frame(newlabels)
newlabels$row <- row(newlabels)
newlabels <- merge(newlabels, groupdf, by.x='newlabels', by.y ='soilplot')
newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
newlabels <- newlabels[order(newlabels$row),1]
newtree <- t
newtree$labels <- newlabels
dend1 <- color_branches(as.hclust(newtree), k = ngroups)
dend1 <- color_labels(dend1, k = ngroups)
#output file
w <- 800
h <- nrow(plotdata)*12+80
u <- 12
png(filename=filename,width = w, height = h, units = "px", pointsize = u)
par(mar = c(2,0,1,13))
plot(dend1, horiz = TRUE, main=paste('floristic simularity', a,'method of', 'GRIN genera'), font=1, cex=0.84)
#rect.dendrogram(dend1, k = ngroups, horiz = TRUE)
dev.off()
}
library(optpart)
a <- 'bray-flex'
if (T){
a1 <- 'bray-agnes'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d)
makeplot(a1,d,t1,k)
}
a <- 'bray-agnes'
if (T){
a1 <- 'bray-agnes'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- agnes(d, method='average')
makeplot(a1,d,t1,k)
}
a <- 'bray-flex'
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d)
makeplot(a1,d,t1,k)
}
if (T){
a3 <- 'bray-ward'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t3 <- agnes(d, method='ward')
makeplot(a3,d,t3,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta=0)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta=-.5)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta=-.1)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.25)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.2)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.3)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.5)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.1)
makeplot(a1,d,t1,k)
}
if (T){
a1 <- 'bray-flex'
k=14
d <- ((vegdist(plotdata, method='bray', binary=FALSE, na.rm=T)))
t1 <- flexbeta(d, beta= -0.25)
makeplot(a1,d,t1,k)
}
